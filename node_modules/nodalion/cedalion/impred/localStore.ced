'/bootstrap':signature(testLocalStore(X)::impred,[X::localStoreVal]).
'/bootstrap':defAtom(localStoreVal::'/bootstrap':type).
'/bootstrap':signature(localSet(Key,Value)::task(localStoreVal),[Key::'/bootstrap':string,Value::localStoreVal]).
'/bootstrap':signature(localGet(Key)::task(localStoreVal),[Key::'/bootstrap':string]).
clause(testLocalStore(X),conj(task(localSet(!foo,localStr(!bar)),_,localStoreVal),task(localGet(!foo),X,localStoreVal))).
'/bootstrap':signature(localGet(Key,Default)::expr(localStoreVal),[Key::'/bootstrap':string,Default::localStoreVal]).
'/bootstrap':signature(localStr(Str)::localStoreVal,[Str::'/bootstrap':string]).
'/bootstrap':projection(localStr(Str)::localStoreVal,'/bootstrap':horiz(['/bootstrap':label(!'"'),'/bootstrap':vis(Str::'/bootstrap':string),'/bootstrap':label(!'"')])).
'/bootstrap':adapter(Str::'/bootstrap':string,localStr(Str)::localStoreVal).
'/util':behavior(localGet(!x,localStr(!foo))::expr(localStoreVal),!'should provide the default value if the key is not in the local storage',simulate(eval(localGet(!x,localStr(!foo)),localStoreVal,localStr(!foo)),[],_)).
defFunc(localGet(Key,Default),localStoreVal,funcIf(conj(task(localGet(Key),Value,localStoreVal),pred(\+builtin:var(Value::localStoreVal))),pureExpr('/Functional':const(Value)),pureExpr('/Functional':const(Default)))).
'/util':behavior(localGet(Key,Default)::expr(localStoreVal),!'should return the value associated with the key if one exists',simulate(eval(localGet(!x,localStr(!foo)),localStoreVal,localStr(!bar)),[task(localGet(!x),localStr(!bar),localStoreVal)],true)).
