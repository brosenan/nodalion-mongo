'/bootstrap':defAtom(someException::'/bootstrap':exception).
'/bootstrap':signature(throws(Exception)::response(_),[Exception::'/bootstrap':exception]).
'/bootstrap':unitTest(solve(pred(builtin:throw(someException)),_,_,throws(someException))).
'/bootstrap':signature(catch(Goal,Exception,Catch)::impred,[Goal::impred,Exception::'/bootstrap':exception,Catch::impred]).
'/bootstrap':projection(catch(Goal,Exception,Catch)::impred,'/bootstrap':vert(['/bootstrap':label(!'try:'),'/bootstrap':horiz(['/bootstrap':label(!'    '),'/bootstrap':vis(Goal::impred)]),'/bootstrap':horiz(['/bootstrap':label(!catch),'/bootstrap':vis(Exception::'/bootstrap':exception)]),'/bootstrap':horiz(['/bootstrap':label(!'    '),'/bootstrap':vis(Catch::impred)])])).
'/bootstrap':unitTest(solve(catch(pred(3::'/bootstrap':number=X::'/bootstrap':number),_,pred(builtin:fail)),X,'/bootstrap':number,solution(3))).
solve(catch(Goal,Exception,Catch),X,T,solution(XPrime)):-solve(Goal,X,T,solution(XPrime)).
'/bootstrap':unitTest((solve(annotation:parentheses(catch(pred(builtin:throw(someException)),_,pred(3::'/bootstrap':number=X::'/bootstrap':number))),X,'/bootstrap':number,solution(XPrime)),builtin:equals(XPrime::'/bootstrap':number,3::'/bootstrap':number))).
solve(catch(Goal,Exception,Catch),X,T,Sol):-solve(Goal,X,T,throws(ExceptionPrime)),builtin:if(Exception::'/bootstrap':exception=ExceptionPrime::'/bootstrap':exception,solve(Catch,X,T,Sol),builtin:throw(ExceptionPrime)).
'/bootstrap':sigProj(throwInto(Goal,Exception,Response,X,T)::'/bootstrap':pred,[Goal::impred,Exception::'/bootstrap':exception,Response::response(T),X::T,T::'/bootstrap':type],'/bootstrap':horiz(['/bootstrap':label(!throw),'/bootstrap':vis(Exception::'/bootstrap':exception),'/bootstrap':label(!'into find'),'/bootstrap':vis(X::T),'/bootstrap':label(! (::)),'/bootstrap':vis(T::'/bootstrap':type),'/bootstrap':label(!for),'/bootstrap':vis(Goal::impred),'/bootstrap':label(!'to get'),'/bootstrap':vis(Response::response(T))])).
'/bootstrap':unitTest((throwInto(true,someException,Resp,X,T),builtin:equals(Resp::response(T),throws(someException)::response(T)))).
throwInto(Goal,Exception,Solution,X,T):-builtin:if(annotation:parentheses(Goal::impred=catch(_,Exception,Catch)::impred),solve(Catch,X,T,Solution),Solution::response(T)=throws(Exception)::response(T)).
'/bootstrap':unitTest((throwInto(catch(true,_,pred(X::'/bootstrap':number=2::'/bootstrap':number)),someException,Resp,X,'/bootstrap':number),builtin:equals(Resp::response('/bootstrap':number),solution(2)::response('/bootstrap':number)))).
'/bootstrap':unitTest((throwInto(catch(true,'/bootstrap':false(_),pred(X::'/bootstrap':number=2::'/bootstrap':number)),someException,Resp,X,'/bootstrap':number),builtin:equals(Resp::response('/bootstrap':number),throws(someException)::response('/bootstrap':number)))).
'/bootstrap':unitTest((solve(catch(conj(task(userInput,Str,'/bootstrap':string),true),someException,pred(builtin:fail)),X,T,Resp),builtin:equals(Resp::response(T),continuation(userInput,Str,'/bootstrap':string,catch(conj(true,true),someException,pred(builtin:fail)),X)::response(T)))).
annotation:shrink((solve(catch(Goal,Exception,Catch),X,T,continuation(Task,Result,Tau,catch(GoalPrime,Exception,Catch),XPrime)):-solve(Goal,X,T,continuation(Task,Result,Tau,GoalPrime,XPrime)))).
